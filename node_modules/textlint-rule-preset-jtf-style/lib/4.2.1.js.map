{"version":3,"sources":["../src/4.2.1.js"],"names":["reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","text","matchRegExp","forEach","match","index","fix","replaceTextRange","matchAfter","module","exports","linter"],"mappings":"AAAA;AACA;AACA;;;;;;;;;;;;AAWA;;AACA;;;;AAEA,SAASA,QAAT,CAAkBC,OAAlB,EAA2B;AAAA,MACjBC,MADiB,GAC+BD,OAD/B,CACjBC,MADiB;AAAA,MACTC,SADS,GAC+BF,OAD/B,CACTE,SADS;AAAA,MACEC,MADF,GAC+BH,OAD/B,CACEG,MADF;AAAA,MACUC,KADV,GAC+BJ,OAD/B,CACUI,KADV;AAAA,MACiBC,SADjB,GAC+BL,OAD/B,CACiBK,SADjB;AAEvB,6BACKJ,MAAM,CAACK,GADZ,YACiBC,IADjB,EACuB;AACf,QAAI,CAAC,iCAAkBA,IAAlB,EAAwBP,OAAxB,CAAL,EAAuC;AACnC;AACH;;AACD,QAAIQ,IAAI,GAAGH,SAAS,CAACE,IAAD,CAApB,CAJe,CAKf;;AACA,QAAME,WAAW,GAAG,0FAApB;AACA,0CAAqBD,IAArB,EAA2BC,WAA3B,EAAwCC,OAAxC,CAAgD,UAAAC,KAAK,EAAI;AAAA,UAC7CC,KAD6C,GACnCD,KADmC,CAC7CC,KAD6C;AAErD,aAAOT,MAAM,CACTI,IADS,EAET,IAAIL,SAAJ,CAAc,2BAAd,EAA2C;AACvCU,QAAAA,KAAK,EAAEA,KADgC;AAEvCC,QAAAA,GAAG,EAAET,KAAK,CAACU,gBAAN,CAAuB,CAACF,KAAD,EAAQA,KAAK,GAAG,CAAhB,CAAvB,EAA2C,GAA3C;AAFkC,OAA3C,CAFS,CAAb;AAOH,KATD,EAPe,CAiBf;AACA;;AACA,QAAMG,UAAU,GAAG,WAAnB;AACA,0CAAqBP,IAArB,EAA2BO,UAA3B,EAAuCL,OAAvC,CAA+C,UAAAC,KAAK,EAAI;AAAA,UAC5CC,KAD4C,GAClCD,KADkC,CAC5CC,KAD4C;AAEpD,aAAOT,MAAM,CACTI,IADS,EAET,IAAIL,SAAJ,CAAc,yCAAd,EAAyD;AACrDU,QAAAA,KAAK,EAAEA,KAD8C;AAErDC,QAAAA,GAAG,EAAET,KAAK,CAACU,gBAAN,CAAuB,CAACF,KAAD,EAAQA,KAAK,GAAG,CAAhB,CAAvB,EAA2C,GAA3C;AAFgD,OAAzD,CAFS,CAAb;AAOH,KATD;AAUH,GA/BL;AAiCH;;AACDI,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,MAAM,EAAEnB,QADK;AAEbK,EAAAA,KAAK,EAAEL;AAFM,CAAjB","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n4.2.1. 感嘆符(!)\n和文の実務文章の場合、本文では感嘆符を多用しません。\n原文で感嘆符が使われている場合も、和文ではできるだけ句点を使用します。\n\nただし、見出しや広告関連の文章、強い調子で読者の注意を促す文章など、\n感嘆符の使用が適切と判断される場合には、感嘆符を使用します。\n使用する場合は「全角」で表記します。\n文末に感嘆符を使用し、後に 別の文が続く場合は、直後に全角スペースを挿入します。\n文中に感嘆符を使用する場合はスペースを挿入しません。下記を参考にしてください。\n */\nimport { isUserWrittenNode } from \"./util/node-util\";\nimport { matchCaptureGroupAll } from \"match-index\";\n\nfunction reporter(context) {\n    let { Syntax, RuleError, report, fixer, getSource } = context;\n    return {\n        [Syntax.Str](node) {\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            let text = getSource(node);\n            // 半角の!は利用しない\n            const matchRegExp = /(?:[\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uF900-\\uFAFF]|[\\uD840-\\uD87F][\\uDC00-\\uDFFF]|[ぁ-んァ-ヶ])(!)/;\n            matchCaptureGroupAll(text, matchRegExp).forEach(match => {\n                const { index } = match;\n                return report(\n                    node,\n                    new RuleError(\"感嘆符(！)を使用する場合は「全角」で表記します。\", {\n                        index: index,\n                        fix: fixer.replaceTextRange([index, index + 1], \"！\")\n                    })\n                );\n            });\n            // ！の後ろは全角スペースが推奨\n            // 半角スペースである場合\n            const matchAfter = /！( )[^\\n]/;\n            matchCaptureGroupAll(text, matchAfter).forEach(match => {\n                const { index } = match;\n                return report(\n                    node,\n                    new RuleError(\"文末に感嘆符を使用し、後に別の文が続く場合は、直後に全角スペースを挿入します。\", {\n                        index: index,\n                        fix: fixer.replaceTextRange([index, index + 1], \"　\")\n                    })\n                );\n            });\n        }\n    };\n}\nmodule.exports = {\n    linter: reporter,\n    fixer: reporter\n};\n"],"file":"4.2.1.js"}