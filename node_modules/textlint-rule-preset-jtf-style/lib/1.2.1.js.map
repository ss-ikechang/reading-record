{"version":3,"sources":["../src/1.2.1.js"],"names":["rx","leftTarget","japaneseRegExp","rightTarget","replaceSymbol","reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","text","leftMatches","rightMatches","matches","forEach","match","symbol","indexOfSymbol","index","fix","replaceTextRange","module","exports","linter"],"mappings":"AAAA;AACA;;AACA;;AACA;;AACA;;AACA;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AANA,IAAMA,EAAE,GAAG,mBAAK,GAAL,CAAX;AACA;;;;;;AAOA;AACA,IAAMC,UAAU,GAAGD,EAAH,oBAENE,sBAFM,CAAhB,C,CAIA;;AACA,IAAMC,WAAW,GAAGH,EAAH,qBACPE,sBADO,CAAjB,C,CAIA;;AACA,IAAME,aAAa,GAAG;AAClB,OAAK,GADa;AAElB,OAAK;AAFa,CAAtB;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,OAAO,EAAI;AAAA,MAClBC,MADkB,GAC8BD,OAD9B,CAClBC,MADkB;AAAA,MACVC,SADU,GAC8BF,OAD9B,CACVE,SADU;AAAA,MACCC,MADD,GAC8BH,OAD9B,CACCG,MADD;AAAA,MACSC,KADT,GAC8BJ,OAD9B,CACSI,KADT;AAAA,MACgBC,SADhB,GAC8BL,OAD9B,CACgBK,SADhB;AAExB,6BACKJ,MAAM,CAACK,GADZ,YACiBC,IADjB,EACuB;AACf,QAAI,CAAC,iCAAkBA,IAAlB,EAAwBP,OAAxB,CAAL,EAAuC;AACnC;AACH;;AACD,QAAMQ,IAAI,GAAGH,SAAS,CAACE,IAAD,CAAtB;AACA,QAAME,WAAW,GAAG,sCAAqBD,IAArB,EAA2Bb,UAA3B,CAApB;AACA,QAAMe,YAAY,GAAG,sCAAqBF,IAArB,EAA2BX,WAA3B,CAArB;AACA,QAAMc,OAAO,GAAG,2BAAaF,WAAb,EAA0BC,YAA1B,CAAhB;AACAC,IAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,KAAK,EAAI;AACrB,UAAMC,MAAM,GAAGhB,aAAa,CAACe,KAAK,CAACL,IAAP,CAA5B;AACA,UAAMO,aAAa,GAAGF,KAAK,CAACG,KAA5B;AACAb,MAAAA,MAAM,CACFI,IADE,EAEF,IAAIL,SAAJ,CACI,sDADJ,EAEI;AACIc,QAAAA,KAAK,EAAED,aADX;AAEIE,QAAAA,GAAG,EAAEb,KAAK,CAACc,gBAAN,CAAuB,CAACH,aAAD,EAAgBA,aAAa,GAAG,CAAhC,CAAvB,EAA2DD,MAA3D;AAFT,OAFJ,CAFE,CAAN;AAUH,KAbD;AAcH,GAvBL;AAyBH,CA3BD;;AA4BAK,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,MAAM,EAAEtB,QADK;AAEbK,EAAAA,KAAK,EAAEL;AAFM,CAAjB","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport regx from \"regx\";\nimport { japaneseRegExp } from \"./util/regexp\";\nimport { matchCaptureGroupAll } from \"match-index\";\nimport mergeMatches from \"./util/merge-matches\";\nconst rx = regx(\"g\");\n/*\n1.2.1. 句点(。)と読点(、)\n句読点には全角の「、」と「。」を使います。和文の句読点としてピリオド(.)とカンマ(,)を使用しません。\n「4.1.1 句点(。)」と「4.1.2 読点(、)」を参照してください。\n */\nimport { isUserWrittenNode } from \"./util/node-util\";\n\n// [,.]{日本語}\nconst leftTarget = rx`\n        ([,\\.])\n        ${japaneseRegExp}\n    `;\n// {日本語}[,.]\nconst rightTarget = rx`\n        ${japaneseRegExp}\n        ([,\\.])\n    `;\n// . => 。 の置換マップ\nconst replaceSymbol = {\n    \".\": \"。\",\n    \",\": \"、\"\n};\n\nconst reporter = context => {\n    let { Syntax, RuleError, report, fixer, getSource } = context;\n    return {\n        [Syntax.Str](node) {\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            const text = getSource(node);\n            const leftMatches = matchCaptureGroupAll(text, leftTarget);\n            const rightMatches = matchCaptureGroupAll(text, rightTarget);\n            const matches = mergeMatches(leftMatches, rightMatches);\n            matches.forEach(match => {\n                const symbol = replaceSymbol[match.text];\n                const indexOfSymbol = match.index;\n                report(\n                    node,\n                    new RuleError(\n                        \"句読点には全角の「、」と「。」を使います。和文の句読点としてピリオド(.)とカンマ(,)を使用しません。\",\n                        {\n                            index: indexOfSymbol,\n                            fix: fixer.replaceTextRange([indexOfSymbol, indexOfSymbol + 1], symbol)\n                        }\n                    )\n                );\n            });\n        }\n    };\n};\nmodule.exports = {\n    linter: reporter,\n    fixer: reporter\n};\n"],"file":"1.2.1.js"}