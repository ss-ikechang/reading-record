{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;;;;;;;;AAKA;;AACA;;AACA;;;;;;;;;;AACA,IAAM,KAAK,oBAAK,GAAL,CAAX;AACA,IAAM,iBAAiB,0FAAvB;;AAEA,SAAS,QAAT,CAAkB,OAAlB,EAA2B;AAAA,QAChB,MADgB,GAC+B,OAD/B,CAChB,MADgB;AAAA,QACR,SADQ,GAC+B,OAD/B,CACR,SADQ;AAAA,QACG,MADH,GAC+B,OAD/B,CACG,MADH;AAAA,QACW,KADX,GAC+B,OAD/B,CACW,KADX;AAAA,QACkB,SADlB,GAC+B,OAD/B,CACkB,SADlB;;AAEvB,QAAM,SAAS,oCAAf;AACA,+BACK,OAAO,GADZ,YACiB,IADjB,EACsB;AACd,YAAI,OAAO,WAAP,CAAmB,IAAnB,EAAyB,CAAC,OAAO,IAAR,EAAc,OAAO,KAArB,EAA4B,OAAO,UAAnC,EAA+C,OAAO,QAAtD,CAAzB,CAAJ,EAA+F;AAC3F;AACH;AACD,YAAM,OAAO,UAAU,IAAV,CAAb;AACA;AACA,YAAM,WAAW,EAAX,kBAAgB,cAAhB,EAAoC,cAApC,CAAN;AACA,YAAM,aAAa,eAAnB;AACA,kCAAS,IAAT,EAAe,QAAf,EAAyB,OAAzB,CAAiC,iBAAS;AAAA,gBAC/B,KAD+B,GACP,KADO,CAC/B,KAD+B;AAAA,gBACxB,aADwB,GACP,KADO,CACxB,aADwB;AAEtC;;AACA,gBAAI,WAAW,IAAX,CAAgB,KAAhB,CAAJ,EAA4B;AACxB;AACH;AACD,0BAAc,OAAd,CAAsB,wBAAgB;AAClC,oBAAM,QAAQ,aAAa,KAA3B;AACA,uBAAO,IAAP,EAAa,IAAI,SAAJ,CAAc,6BAAd,EAA6C;AACtD,2BAAO,KAD+C;AAEtD,yBAAK,MAAM,gBAAN,CAAuB,CAAC,KAAD,EAAQ,QAAQ,CAAhB,CAAvB,EAA2C,EAA3C;AAFiD,iBAA7C,CAAb;AAIH,aAND;AAOH,SAbD;AAcH,KAvBL;AAyBH;AACD,OAAO,OAAP,GAAiB;AACb,YAAQ,QADK;AAEb,WAAO;AAFM,CAAjB","file":"index.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n 全角文字と半角文字の間\n 全角文字どうしの間にスペースを入れません。\n ただしカタカナ複合語の場合を除きます。\n */\nimport {RuleHelper} from \"textlint-rule-helper\";\nimport {matchAll} from \"match-index\";\nimport regx from \"regx\";\nconst rx = regx(\"g\");\nconst japaneseRegExp = /(?:[々〇〻\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uF900-\\uFAFF]|[\\uD840-\\uD87F][\\uDC00-\\uDFFF]|[ぁ-んァ-ヶ])/;\n\nfunction reporter(context) {\n    const {Syntax, RuleError, report, fixer, getSource} = context;\n    const helper = new RuleHelper();\n    return {\n        [Syntax.Str](node){\n            if (helper.isChildNode(node, [Syntax.Link, Syntax.Image, Syntax.BlockQuote, Syntax.Emphasis])) {\n                return;\n            }\n            const text = getSource(node);\n            // 全角同士の間は半角スペースを入れない\n            const matchReg = rx`${japaneseRegExp}( )${japaneseRegExp}`;\n            const katakakana = /[ァ-ヶ]( )[ァ-ヶ]/;\n            matchAll(text, matchReg).forEach(match => {\n                const {input, captureGroups} = match;\n                // ただしカタカナ複合語の場合を除きます。\n                if (katakakana.test(input)) {\n                    return;\n                }\n                captureGroups.forEach(captureGroup => {\n                    const index = captureGroup.index;\n                    report(node, new RuleError(\"原則として、全角文字どうしの間にスペースを入れません。\", {\n                        index: index,\n                        fix: fixer.replaceTextRange([index, index + 1], \"\")\n                    }));\n                });\n            });\n        }\n    };\n}\nmodule.exports = {\n    linter: reporter,\n    fixer: reporter\n};\n"]}